@using Microsoft.AspNet.Identity
@model Clinic2.Models.Consultation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Consultation</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @*<h4>Consultation</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h4>Info du patient</h4>
    <div class="form-group">
        @Html.LabelFor(model => model.ID_Patient, "Numéro", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("ID_Patient", new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ID_Patient, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Patient.nom, "Nom", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Nom_Patient", new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Patient.nom, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Patient.nom, "Prénom", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Prenom_Patient", new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Patient.nom, "", new { @class = "text-danger" })
        </div>
    </div>
    <h4>Staff</h4>
    <div class="form-group">
        @Html.Label("Numéro", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Staff_Id", new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessage("Numéro du staff", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Nom", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Editor("Staff_Nom", new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
            @Html.ValidationMessage("Nom du staff", "", new { @class = "text-danger" })
        </div>
    </div>

    <h4>Consultation</h4>
    @if (User.IsInRole("medecin"))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.motif, "Motif", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.motif, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.motif, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.motif, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.note, "Note", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.note, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.poids, "Poids", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.poids, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.poids, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.taille, "Taille", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.taille, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.taille, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.temperature, "Température", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.temperature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.temperature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.systol, "Systol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.systol, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.systol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.diastol, "Diastol", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.diastol, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.diastol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.diagnostique, "Diagnostique", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.diagnostique, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.diagnostique, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.diagnostique, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.maladie, "Maladie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.maladie, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.maladie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.antecedent, "Antécédent", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.antecedent, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.antecedent, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.antecedent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.statut, "Statut", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.statut)
                    @Html.ValidationMessageFor(model => model.statut, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.motif, "Motif", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.motif, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.motif, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.motif, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.note, "Note", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @*@Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextAreaFor(model => model.note, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>
        </div>
    }



    @*<div class="form-group">
            @Html.LabelFor(model => model.ID_Staff, "ID_Staff", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ID_Staff", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ID_Staff, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/autosize.js"></script>
}
<script>
    window.onload = function () {
        autosize(document.getElementById("note"));
        autosize(document.getElementById("diagnostique"));
        autosize(document.getElementById("antecedent")); 
        autosize(document.getElementById("motif"));
    };
</script>
