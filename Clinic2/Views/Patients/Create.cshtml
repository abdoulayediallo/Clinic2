@model Clinic2.Models.Patient

@{
    ViewBag.Title = "Créer un patient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Créer une nouvelle fiche patient</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Patient</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                @Html.LabelFor(model => model.createDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.createDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.createDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.createBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.createBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.createBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.changeDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.changeDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.changeDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.changeBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.changeBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.changeBy, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.nom, "Nom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control", required="required" } })
                @Html.ValidationMessageFor(model => model.nom, "Ce champ est obligatoire", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.prenom, "Prenom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.prenom, "Ce champ est obligatoire", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date_naissance, "Date de naissance", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date_naissance, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.date_naissance, "Ce champ est obligatoire sous le format Jour/Mois/Année 01/12/19999", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sexe, "Sexe", htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.sexe, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("sexe", new List<SelectListItem>
                {
                   new SelectListItem{ Text="Féminin", Value = "F" },
                   new SelectListItem{ Text="Masculin", Value = "M" },
                }, " ", new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.sexe, "Ce champ est obligatoire", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.profession, "Profession", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.profession, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.profession, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.situation_familial, "Situation familial", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.situation_familial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.situation_familial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.groupe_sanguin, "Groupe sanguin", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.groupe_sanguin, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("groupe_sanguin", new List<SelectListItem>
                {
                   new SelectListItem{ Text="A+", Value = "A+" },
                   new SelectListItem{ Text="A-", Value = "A-" },
                   new SelectListItem{ Text="B+", Value = "B+" },
                   new SelectListItem{ Text="B-", Value = "B-" },
                   new SelectListItem{ Text="O+", Value = "O+" },
                   new SelectListItem{ Text="O-", Value = "O-" },
                   new SelectListItem{ Text="AB+", Value = "AB+" },
                   new SelectListItem{ Text="AB-", Value = "AB-" },
                }, "Faite un choix", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupe_sanguin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @type = "email", title = "Veuillez entrer un email valide" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telephone, "Telephone", htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.telephone, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                @Html.ValidationMessageFor(model => model.telephone, "Ce champ est obligatoire", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.extra_info, "Information complémentaire", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.extra_info, htmlAttributes: new { @class = "form-control", @cols = 3000, @rows = 8 })
                @Html.ValidationMessageFor(model => model.extra_info, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.statut, "Statut", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                    @*@Html.EditorFor(model => model.statut, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownList("statut", new List<SelectListItem>
                    {
                       new SelectListItem{ Text="Actif", Value = "true" },
                       new SelectListItem{ Text="Inactif", Value = "false" },
                    }," ", new { @class = "form-control", required = "required"
                    })
                    @Html.ValidationMessageFor(model => model.statut, "Ce champ est obligatoire", new { @class = "text-danger" })
               
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Pays", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.Editor("pays", new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("country", new List<SelectListItem>
                {
                   new SelectListItem{ Text="", Value ="" },
                }, "Faite un choix", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ville", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.Editor("ville", new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("state", new List<SelectListItem>
                {
                   new SelectListItem{ Text="", Value ="" },
                }, "Choisissez une ville", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Prefecture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("prefecture", new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Village", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Editor("village", new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à liste des patients", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/autosize")
    <script src="~/Scripts/countries.js"></script>
    <script language="javascript">
        populateCountries("country", "state"); // first parameter is id of country drop-down and second parameter is id of state drop-down
    </script>
}
<script>
    window.onload = function () { autosize(document.getElementById("extra_info")); };
</script>